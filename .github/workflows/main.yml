jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repo
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Step 2: Install Dependencies
      - name: Install Dependencies
        run: npm install --force

      # Step 3: Check for develop errors
      - name: Check Development Environment (fail if errors)
        id: check_dev
        run: |
          echo "Running npm run develop for error check..."
          if timeout 30s npm run develop -- --no-build; then
            echo "develop_check=true" >> $GITHUB_ENV
          else
            echo "develop_check=false" >> $GITHUB_ENV
            exit 1
          fi

      # Step 4: Build Strapi (Only if develop passed)
      - name: Build Strapi Project
        if: env.develop_check == 'true'
        run: npm run build

      # Step 5: Stop old Strapi and clean server (Only if develop passed)
      - name: Prepare Server
        if: env.develop_check == 'true'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_USER }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            echo "Stopping old Strapi..."
            pm2 stop strapi || echo "Strapi not running"
            echo "Cleaning previous project files..."
            rm -rf /root/test-srapijs-digitalOcean-/*

      # Step 6: Upload files (Only if develop passed)
      - name: Upload Project Files
        if: env.develop_check == 'true'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_USER }}
          password: ${{ secrets.PROD_PASSWORD }}
          source: "."
          target: "/root/test-srapijs-digitalOcean-"

      # Step 7: Restart Strapi on server (Only if develop passed)
      - name: Restart Strapi
        if: env.develop_check == 'true'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_USER }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            cd /root/test-srapijs-digitalOcean-
            npm install --force
            npm run build
            pm2 start "npm start" --name "strapi"
